{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "vm",
      "metadata": {
        "description": "Username for the Virtual Machine."
            }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "Password or ssh key for the Virtual Machine."
      }
    },

    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A2_v2",
      "metadata": {
        "description": "Size for the Virtual Machine."
      }
        }

        },
    "functions": [],
    "variables": {
        "vmName1": "harbor",
        "publicIP1": "[concat(variables('vmName1'), '-PublicIP')]",
        "nsgName": "ubuntuVM-nsg",
        "VirtualNetworkName": "ubuntuVM-VirtualNetwork",
        "interfaceName1": "[concat(variables('vmName1'), '-NetworkInterface')]",
        "subNetName": "[concat(variables('VirtualNetworkName'), '-Subnet')]",
              "_artifactsLocation": {
          "type": "string",
          "metadata": {
              "description": "The base URI where artifacts required by this template are located including a trailing '/'"
          },
          "defaultValue": "[deployment().properties.templateLink.uri]"  //use this for the Azure marketplace
      },

      "scriptName1": "harbor",
      "scriptNameSh1": "[concat(variables('scriptName1'), '.sh')]",
      "scriptUri": "[concat(variables('_artifactsLocation'),variables('scriptNameSh1'))]",
      "linuxConfiguration": {
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
    },

     "resources": [
  {   
      "apiVersion": "2019-07-01",
      "name": "pid-fd0dbae0-7db3-4f79-b08c-98920ee81415",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },

        {   
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIP1')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },

        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": ["22", "80", "443"],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('VirtualNetworkName')]", 
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "tags": {
                "displayName": "[variables('VirtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subNetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('interfaceName1')]",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VirtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[variables('interfaceName1')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VirtualNetworkName'), variables('subNetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {    

        
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName1')]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
            ],
            "tags": {
                "displayName": "[variables('vmName1')]"
            },

            "properties": {
              "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
                "osProfile": {
                    "computerName": "[variables('vmName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "meanio",
                        "offer": "linnovate-open-source-sla-pro",
                        "sku": "linnovate-ubuntu18-supported",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmName1'), '-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage"

                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName1'))]"
                        }
                    ]
                }
 
            },
            "plan": {
                "name": "linnovate-ubuntu18-supported",
                "publisher": "meanio",
                "product": "linnovate-open-source-sla-pro"
            }
            
        },


        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName1'), '/harbor.sh')]",
            "apiVersion": "2020-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vmName1')]"
            ],
            "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": { 
              "fileUris": [
                "[variables('scriptUri')]"  
              ],
            "commandToExecute": "bash -x harbor.sh IP"
            }
        }
        }       
],
    "outputs": {}
}

